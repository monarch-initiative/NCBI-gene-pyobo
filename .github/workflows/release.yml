name: Release

on:
  workflow_dispatch:  # This allows manual triggering of the workflow
  schedule:
    - cron: '0 0 * * 0'  # This runs the workflow at midnight every Sunday (UTC)

jobs:
  build:
    runs-on: ubuntu-latest
    container: obolibrary/odkfull:latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          poetry add setuptools@latest
          poetry install --no-interaction

      - name: Run make release
        run: make release

      - name: Get current date
        id: current_date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.CURRENT_DATE }}
          release_name: Release ${{ env.CURRENT_DATE }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This is the URL for uploading assets to the created release
          asset_path: ./data/release-${{ env.CURRENT_DATE }}.tar.gz
          asset_name: release-${{ env.CURRENT_DATE }}.tar.gz
          asset_content_type: application/gzip
